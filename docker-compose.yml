x-python-common:
  &python-common
  image: ${DOCKER_IMAGE}
  user: "${DOCKER_UID}:${DOCKER_GID}"
  volumes:
    - ./.env:${DOCKER_PROJECT_DIR}/.env
    - ./src:${DOCKER_PROJECT_DIR}/src
  working_dir: ${DOCKER_PROJECT_DIR}/src

services:
  postgres:
    image: postgres:17.0
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    ports:
      - "${DATABASE_PORT}:5432"
    volumes:
      - .docker_volumes/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DATABASE_USER}"]
      interval: 20s
      retries: 5
      start_period: 10s
    restart: always

  rabbitmq:
    image: rabbitmq:4.0.3-management
    hostname: rabbit
    environment:
      - RABBITMQ_DEFAULT_USER=${TASKS_BROKER_USER}
      - RABBITMQ_DEFAULT_PASS=${TASKS_BROKER_PASSWORD}
      - RABBITMQ_DEFAULT_VHOST=${TASKS_BROKER_VHOST}
    ports:
      - "${TASKS_BROKER_PORT}:5672"
      - "${TASKS_BROKER_MANAGEMENT_PORT}:15672"
    volumes:
      - .docker_volumes/rabbitmq:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 20s
      retries: 5
      start_period: 10s
    restart: always

  postgres-init:
    <<: *python-common
    depends_on:
      - postgres
    command: poetry run alembic upgrade head

  tasks-worker:
    <<: *python-common
    depends_on:
      - postgres-init
      - rabbitmq
    restart: always
    command: poetry run python -m tasks worker

  tasks-scheduler:
    <<: *python-common
    depends_on:
      - postgres-init
      - rabbitmq
    restart: always
    command: poetry run python -m tasks scheduler

  api:
    <<: *python-common
    depends_on:
      - postgres-init
    restart: always
    command: poetry run python -m api

  bot:
    <<: *python-common
    depends_on:
      - api
    restart: always
    command: poetry run python -m bot
