"""Adds `updated_at` columns.

Revision ID: e8e8fd6e81ad
Revises: 6e8a466731d5
Create Date: 2024-10-02 18:35:22.737910

"""

from typing import Sequence

import sqlalchemy as sa
from alembic import op

from database.migrations.sql import (
    CREATE_REFRESH_UPDATED_AT_FUNC_SQL,
    CREATE_UPDATED_AT_TRIGGER_SQL,
    DROP_REFRESH_UPDATED_AT_FUNC_SQL,
    DROP_UPDATED_AT_TRIGGER_SQL,
)

# revision identifiers, used by Alembic.
revision: str = "e8e8fd6e81ad"
down_revision: str | None = "6e8a466731d5"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrades database."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(CREATE_REFRESH_UPDATED_AT_FUNC_SQL)

    op.add_column(
        "adverts", sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False)
    )
    op.create_index(op.f("ix_adverts_updated_at"), "adverts", ["updated_at"], unique=False)
    op.execute(CREATE_UPDATED_AT_TRIGGER_SQL.format(table="adverts"))

    op.add_column(
        "monitoring_runs",
        sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
    )
    op.create_index(op.f("ix_monitoring_runs_updated_at"), "monitoring_runs", ["updated_at"], unique=False)
    op.execute(CREATE_UPDATED_AT_TRIGGER_SQL.format(table="monitoring_runs"))

    op.add_column(
        "monitorings",
        sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
    )
    op.create_index(op.f("ix_monitorings_updated_at"), "monitorings", ["updated_at"], unique=False)
    op.execute(CREATE_UPDATED_AT_TRIGGER_SQL.format(table="monitorings"))

    op.add_column(
        "users", sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False)
    )
    op.create_index(op.f("ix_users_updated_at"), "users", ["updated_at"], unique=False)
    op.execute(CREATE_UPDATED_AT_TRIGGER_SQL.format(table="users"))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrades database."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(DROP_UPDATED_AT_TRIGGER_SQL.format(table="users"))
    op.drop_index(op.f("ix_users_updated_at"), table_name="users")
    op.drop_column("users", "updated_at")

    op.execute(DROP_UPDATED_AT_TRIGGER_SQL.format(table="monitorings"))
    op.drop_index(op.f("ix_monitorings_updated_at"), table_name="monitorings")
    op.drop_column("monitorings", "updated_at")

    op.execute(DROP_UPDATED_AT_TRIGGER_SQL.format(table="monitoring_runs"))
    op.drop_index(op.f("ix_monitoring_runs_updated_at"), table_name="monitoring_runs")
    op.drop_column("monitoring_runs", "updated_at")

    op.execute(DROP_UPDATED_AT_TRIGGER_SQL.format(table="adverts"))
    op.drop_index(op.f("ix_adverts_updated_at"), table_name="adverts")
    op.drop_column("adverts", "updated_at")

    op.execute(DROP_REFRESH_UPDATED_AT_FUNC_SQL)
    # ### end Alembic commands ###
